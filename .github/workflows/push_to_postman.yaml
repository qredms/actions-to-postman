name: Generate and Push Postman Collection

on:
  push:
    branches:
      - main
    paths:
      - 'cloudformation/openapi.yaml'
      - '.github/workflows/push_to_postman.yaml'
  workflow_dispatch:

jobs:
  generate_and_push_collection:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Validate OpenAPI file
        run: |
          INPUT_OAS_FILE="cloudformation/openapi.yaml"
          
          # Check if file exists
          if [ ! -f "$INPUT_OAS_FILE" ]; then
            echo "Error: OpenAPI file not found at $INPUT_OAS_FILE"
            ls -la cloudformation/
            exit 1
          fi
          
          # Check file size
          FILE_SIZE=$(stat -c%s "$INPUT_OAS_FILE")
          echo "OpenAPI file size: $FILE_SIZE bytes"
          
          # Show file content (first 20 lines)
          echo "OpenAPI file content (first 20 lines):"
          head -n 20 "$INPUT_OAS_FILE"

      - name: Install openapi-to-postmanv2
        run: npm install -g openapi-to-postmanv2

      - name: Generate Postman Collection
        id: generate_collection
        run: |
          INPUT_OAS_FILE="cloudformation/openapi.yaml"
          OUTPUT_COLLECTION_FILE="postman_collection.json"
          
          echo "Running OpenAPI to Postman conversion..."
          openapi2postmanv2 -s "${INPUT_OAS_FILE}" -o "${OUTPUT_COLLECTION_FILE}" -p
          
          # Check if conversion was successful
          if [ ! -f "$OUTPUT_COLLECTION_FILE" ]; then
            echo "Error: Conversion failed to generate output file"
            echo "Listing contents of current directory to debug:"
            ls -la
            exit 1
          fi
          
          # Check generated file size
          FILE_SIZE=$(stat -c%s "$OUTPUT_COLLECTION_FILE")
          echo "Generated collection file size: $FILE_SIZE bytes"
          
          # Validate the JSON format
          if ! jq empty "$OUTPUT_COLLECTION_FILE" 2>/dev/null; then
            echo "Error: Generated collection is not valid JSON!"
            echo "First 100 characters of the file:"
            head -c 100 "$OUTPUT_COLLECTION_FILE"
            exit 1
          fi
          
          echo "collection_file=${OUTPUT_COLLECTION_FILE}" >> $GITHUB_OUTPUT

      - name: Install Postman CLI
        run: |
          curl -sL https://dl-cli.pstmn.io/postman-cli/latest/linux64 -o postman
          chmod +x postman
          sudo mv postman /usr/local/bin/postman
          postman --version

      - name: Log in to Postman CLI
        run: |
          if [ -z "${{ secrets.POSTMAN_API_KEY }}" ]; then
            echo "Error: POSTMAN_API_KEY secret is not set"
            exit 1
          fi
          echo "Logging in to Postman CLI..."
          postman login --with-api-key "${{ secrets.POSTMAN_API_KEY }}"

      - name: Update Existing Postman Collection
        id: update_collection
        env:
          POSTMAN_WORKSPACE_ID: ${{ secrets.POSTMAN_WORKSPACE_ID }}
          POSTMAN_COLLECTION_UID: ${{ secrets.POSTMAN_COLLECTION_UID }}
          COLLECTION_FILE_PATH: ${{ steps.generate_collection.outputs.collection_file }}
        run: |
          # Validate required secrets
          if [ -z "$POSTMAN_WORKSPACE_ID" ]; then
            echo "Error: POSTMAN_WORKSPACE_ID secret is not set"
            exit 1
          fi
          
          if [ -z "$POSTMAN_COLLECTION_UID" ]; then
            echo "Error: POSTMAN_COLLECTION_UID secret is not set"
            exit 1
          fi
          
          echo "Workspace ID: $POSTMAN_WORKSPACE_ID"
          echo "Collection UID: $POSTMAN_COLLECTION_UID"
          echo "Collection File Path: $COLLECTION_FILE_PATH"
          
          # Verify collection file exists
          if [ ! -f "$COLLECTION_FILE_PATH" ]; then
            echo "Error: Collection file does not exist at $COLLECTION_FILE_PATH"
            ls -la
            exit 1
          fi
          
          # Show collection file size
          FILE_SIZE=$(stat -c%s "$COLLECTION_FILE_PATH")
          echo "Collection file size: $FILE_SIZE bytes"
          
          echo "Updating existing collection with UID: $POSTMAN_COLLECTION_UID"
          RESULT=$(postman collection update "$POSTMAN_COLLECTION_UID" --file "$COLLECTION_FILE_PATH")
          
          # Check if command was successful
          if [ $? -ne 0 ]; then
            echo "Error: Failed to update collection in Postman"
            echo "Result output: $RESULT"
            exit 1
          fi
          
          echo "Update Result: $RESULT"

      - name: List Collections after Update
        run: |
          echo "Collections in workspace after update:"
          postman collection list --workspace "${{ secrets.POSTMAN_WORKSPACE_ID }}"

      - name: Upload Postman Collection as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: postman-collection
          path: ${{ steps.generate_collection.outputs.collection_file }}
          retention-days: 7